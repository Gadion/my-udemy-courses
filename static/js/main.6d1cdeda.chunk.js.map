{"version":3,"sources":["components/CourseBox.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["CourseBox","props","className","contStyle","title","content","App","useState","visibleConts","setVisibleConts","scrolledCont","setScrolledCont","containers","container_1","useRef","container_2","container_3","container_4","container_5","container_6","container_7","container_8","container_9","checkBoxesForVisibility","Object","keys","forEach","key","current","getBoundingClientRect","bottom","window","innerHeight","console","log","scrollPage","useEffect","includes","setTimeout","document","addEventListener","removeEventListener","Fragment","map","container","index","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wPAYeA,GCZA,I,YDGG,SAACC,GACf,OACI,sBAAKC,UAA+B,YAApBD,EAAME,UAA0B,qBAAuB,aAAvE,UACI,oBAAID,UAAU,oBAAd,SAAmCD,EAAMG,QACzC,mBAAGF,UAAU,sBAAb,SAAoCD,EAAMI,eE0EvCC,EA5EH,WAAK,IAAD,EAE0BC,mBAAS,IAFnC,mBAEPC,EAFO,KAEOC,EAFP,OAG0BF,qBAH1B,mBAGPG,EAHO,KAGOC,EAHP,KAKPC,EAAa,CAClBC,YAAaC,mBACbC,YAAaD,mBACbE,YAAaF,mBACbG,YAAaH,mBACbI,YAAaJ,mBACbK,YAAaL,mBACbM,YAAaN,mBACbO,YAAaP,mBACbQ,YAAaR,oBAGTS,EAA0B,WAC9BC,OAAOC,KAAKb,GAAYc,SAAQ,SAAAC,GAC3Bf,EAAWe,GAAKC,QAAQC,wBAAwBC,QAAUC,OAAOC,cACnEC,QAAQC,IAAIP,GACZhB,EAAgBgB,QAKfQ,EAAa,WACjBZ,KAyBF,OAtBAa,qBAAU,WACRH,QAAQC,IAAI,SACR1B,EAAa6B,SAAS3B,IACxBD,EAAgB,GAAD,mBAAKD,GAAL,CAAmBE,OAEpC,CAACA,IAEH0B,qBAAU,WASR,OALAE,YAAW,WACTf,MACA,KAEFgB,SAASC,iBAAiB,SAAUL,GAC9B,WACJI,SAASE,oBAAoB,SAAUN,MAEzC,IAIA,eAAC,IAAMO,SAAP,WACE,kDACA,qBAAKxC,UAAU,yBAAf,SACAsB,OAAOC,KAAKb,GAAY+B,KAAI,SAACC,EAAUC,GACtC,OACA,qBAAK3C,UAAU,uBAEf4C,IAAKlC,EAAWgC,GAFhB,SAGE,cAAC,EAAD,CACAxC,MAAOwC,EACPvC,QAAQ,gCACRF,UAAaK,EAAa6B,SAASO,GAAa,UAAY,QALzDC,YCpDGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,SAM1BZ,M","file":"static/js/main.6d1cdeda.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./courseBox.scss\";\r\n\r\nconst CourseBox = (props) => {\r\n    return (\r\n        <div className={props.contStyle === 'visible' ? 'course-box visible' : 'course-box'}>\r\n            <h1 className=\"course-box__title\">{props.title}</h1>\r\n            <p className=\"course-box__content\">{props.content}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseBox;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, {useEffect, useRef, useState} from 'react';\nimport './App.css';\nimport CourseBox from './components/CourseBox';\n\nconst App = ()=>{\n\n  const [visibleConts, setVisibleConts] = useState([]);\n  const [scrolledCont, setScrolledCont] = useState();\n\n   const containers = {\n    container_1: useRef(),\n    container_2: useRef(),\n    container_3: useRef(),\n    container_4: useRef(),\n    container_5: useRef(),\n    container_6: useRef(),\n    container_7: useRef(),\n    container_8: useRef(),\n    container_9: useRef(),\n  }\n\n  const checkBoxesForVisibility = () =>{\n    Object.keys(containers).forEach(key=>{\n      if(containers[key].current.getBoundingClientRect().bottom <= window.innerHeight){\n       console.log(key)\n       setScrolledCont(key)\n       \n       }\n    })\n  }\n  const scrollPage = () =>{\n    checkBoxesForVisibility()\n  }\n\n  useEffect(()=>{\n    console.log(\"pippo\")\n    if(!visibleConts.includes(scrolledCont)){\n      setVisibleConts([...visibleConts, scrolledCont])\n    }\n  },[scrolledCont])\n\n  useEffect(()=>{\n    /* setTimeout(()=>{\n      setVisibleConts([\"container_1\", \"container_2\", \"container_3\"])\n    },200) */\n    setTimeout(()=>{\n      checkBoxesForVisibility()\n    },200)\n    \n    document.addEventListener('scroll', scrollPage);\n    return()=>{\n      document.removeEventListener('scroll', scrollPage);\n    }\n  },[])\n\n\n  return (\n    <React.Fragment>\n      <h1>My Udemy Courses</h1>\n      <div className=\"course-boxes-container\">\n     {Object.keys(containers).map((container,index)=>{\n       return(\n       <div className=\"course-box-container\"\n       key={index} \n       ref={containers[container]} >\n         <CourseBox \n         title={container} \n         content=\"Mi piace sto corso OHHH SIIII\"\n         contStyle = {visibleConts.includes(container) ? \"visible\" : null}\n         />\n       </div>\n       )\n     })}\n      </div>\n    </React.Fragment>\n    \n    \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}